# -*- coding: utf-8 -*-
"""Automobile_mileage_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mOfweCo4WsamKDIMaaA-xn-dvMDl6Pzh

# **Title of Project:** Automobile Mileage Prediction

# **Objective:** To find the mileage of the automobile using Linear Regression model

# **Data Source**: From Kaggle
'https://www.kaggle.com/datasets/saigeethac/autompg?resource=download%27'

## **Import Library**
"""

import pandas as pd

import seaborn as sns

import numpy as np

import matplotlib.pyplot as plt

"""## **Import Data**"""

mileage = pd.read_csv('auto-mpg.csv')

mileage.head()

mileage.columns

mileage.isna().sum()

"""## **Describe Data**"""

mileage.info()

mileage.describe()

"""## **Data Preprocessing**"""

mileage = mileage.dropna()

mileage.info()

"""## **Data Visualization**"""

sns.pairplot(mileage, x_vars = ['cylinders', 'displacement', 'horsepower', 'weight','acceleration', 'model year', 'origin'], y_vars= ['mpg']);

sns.regplot(x= 'displacement', y= 'mpg', data= mileage);

"""## **Define Target Variable (y) and Feature Variables (X)**"""

y = mileage['mpg']
x = mileage[['cylinders', 'displacement', 'weight','acceleration', 'model year', 'origin']]

"""## **Train Test Split**"""

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(x,y)

"""## **Modeling**"""

from sklearn.linear_model import LinearRegression

model = LinearRegression()

"""## **Model Training**"""

model.fit(x_train,y_train)

model.intercept_

model.coef_

"""## **Prediction**"""

y_pred = model.predict(x_test)

"""# **Model Evaluation**"""

from sklearn.metrics import mean_absolute_percentage_error

mean_absolute_percentage_error(y_test,y_pred)

"""## **Explaination**

Import library: Import the required library for machine learning such as pandas, numpy, matplotlib and seaborn.

Data Collection: The first step is gathering a dataset containing information about various automobiles along with their corresponding MPG values. This dataset should include a variety of features that could potentially influence fuel efficiency.

Data Preprocessing: Once you have your dataset, you'll need to clean and preprocess the data. This might involve handling missing values, encoding categorical variables, and scaling numerical features to ensure they're on similar scales.

Model Selection: After preprocessing the data, you'll choose a suitable machine learning model for the task. Common choices for regression tasks like this include linear regression, decision trees, random forests, and gradient boosting models.

Training the Model: With your chosen model selected, you'll train it on the preprocessed data. During training, the model will learn the patterns and relationships between the input features and the target variable (MPG) from the dataset.

Model Evaluation: Once the model is trained, you'll evaluate its performance using a separate validation dataset or through techniques like cross-validation. Common evaluation metrics for regression tasks include mean squared error (MSE), mean absolute error (MAE), and R-squared.
"""